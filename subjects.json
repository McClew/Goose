{
    "Nmap":{"score":0, "content":[
        "Syntax:\n",
        "{$}"," nmap [Scan Type] [Options] <Target Specification> ",
        "\n\n",
        "Target Specification:\n",
        "> Single IP:    ","{$}"," nmap <ip_address> ","\n",
        "> Specific IPs: ","{$}"," nmap <ip_address> <ip_address> ","\n",
        "> IP range:     ","{$}"," nmap <ip_address>-<quadrant> ","\n",
        "> Domain:       ","{$}"," nmap <domain_name> ","\n",
        "> CIDR range:   ","{$}"," nmap <ip_address>/<subnet_mask> ","\n",
        "> From file:    ","{$}"," nmap -iL <file_name> ","\n",
        "> Random hosts: ","{$}"," nmap -iR <number> ","\n",
        "> Exclude IPs:  ","{$}"," nmap -exclude <ip_address> ","\n",
        "\n",
        "Port Specification:\n",
        "> Single port:      ","{$}"," -p <port> ","\n",
        "> Specific ports:   ","{$}"," -p <port>,<port> ","\n",
        "> TCP & UDP ports:  ","{$}"," -p U:<port>,T:<port>","\n",
        "> Port range:       ","{$}"," -p <port>-<port> ","\n",
        "> All ports:        ","{$}"," -p- ","\n",
        "> Service name:     ","{$}"," -p <service_name>","\n",
        "> Fast (100 ports): ","{$}"," -F ","\n",
        "\n",
        "Scan Techniques:\n",
        "> TCP SYN port scan:      ","{$}"," -sS ","\n",
        "> TCP connect port scan:  ","{$}"," -sT ","\n",
        "> UDP port scan:          ","{$}"," -sU ","\n",
        "> TCP ACK port scan:      ","{$}"," -sA ","\n",
        "> TCP Window port scan:   ","{$}"," -sW ","\n",
        "> TCP Maimon port scan:   ","{$}"," -sM ","\n",
        "\n",
        "Host Discovery:\n",
        "> List targets only:      ","{$}"," -sL ","\n",
        "> Disable port scan:      ","{$}"," -sn ","\n",
        "> Disable host disovery:  ","{$}"," -Pn ","\n",
        "> TCP SYN scan on port:   ","{$}"," -PS<port> ","\n",
        "> TCP ACK scan on port:   ","{$}"," -PA<port> ","\n",
        "> UDP scan on port:       ","{$}"," -PU<port> ","\n",
        "> ARP discovery local:    ","{$}"," -PR ","\n",
        "> Disable DNS resolution: ","{$}"," -n  ","\n",
        "\n",
        "Service & version Detection:\n",
        "> Version detection: ","{$}"," -sV ","\n",
        "> Intensity level:   ","{$}"," -sV -version-intensity <0-9> ","\n",
        "> Minimum intensity: ","{$}"," -sV -version-light ","\n",
        "> Maximum intensity: ","{$}"," -sV -version-all ","\n",
        "\n",
        "OS Detction:\n",
        "> OS detection:         ","{$}"," -O ","\n",
        "> Abort if no port:     ","{$}"," -O -osscan-limit ","\n",
        "> Agressive guessing:   ","{$}"," -O -osscan-guess ","\n",
        "> Max allowed attempts: ","{$}"," -O -max-os-tries <number> ","\n",
        "\n",
        "Timing Pre-set:\n",
        "> Paranoid  (IDS evasive): ","{$}"," -T0 ","\n",
        "> Sneaky    (IDS evasive): ","{$}"," -T1 ","\n",
        "> Polite (less resources): ","{$}"," -T2 ","\n",
        "> Normal        (default): ","{$}"," -T3 ","\n",
        "> Aggressive       (fast): ","{$}"," -T4 ","\n",
        "> Insane       (too fast): ","{$}"," -T5 ","\n",
        "\n",
        "Timing & Performance:\n",
        "> Timout time (s/m/h): ","{$}"," -host-timeout <time> ","\n",
        "> Max scan retries:    ","{$}"," -max-retries <number> ","\n",
        "> Min packet rate:     ","{$}"," -min-rate <number> ","\n",
        "> Max packet rate:     ","{$}"," -max-rate <number> ","\n",
        "\n",
        "NSE Scripts\n",
        "> Run default scripts:  ","{$}"," -sC ","\n",
        "> Run single script:    ","{$}"," -script=<script_name> ","\n",
        "> Run all like scripts: ","{$}"," -script=<script_name>* ","\n",
        "> Set script arguments: ","{$}"," -script-args <arguments> ","\n",
        "\n",
        "Firewall & IDS Evasion:\n",
        "> Fragemnt packets: ","{$}"," -f ","\n",
        "> Set offset size:  ","{$}"," -mtu <number> ","\n",
        "> Set decoy IPs:    ","{$}"," -D <decoy_ip>,<real_ip> ","\n",
        "> Set spoof IPs:    ","{$}"," -S <ip_address> ","\n",
        "> Set source port:  ","{$}"," -g <port> ","\n",
        "> Set proxies:      ","{$}"," -proxies <proxy_address> ","\n",
        "> Add random data:  ","{$}"," -data-length <number> ","\n",
        "\n",
        "Output:\n",
        "> Normal output:        ","{$}"," -oN <file_name> ","\n",
        "> XML output:           ","{$}"," -oX <file_name> ","\n",
        "> Grepable output:      ","{$}"," -oG <file_name> ","\n",
        "> Use all formats:      ","{$}"," -oA <file_name> ","\n",
        "> Grepable to screen:   ","{$}"," -oN - ","\n",
        "                        ","{$}"," -oX - ","\n",
        "                        ","{$}"," -oG - ","\n",
        "> Increase verbosity:   ","{$}"," -v ","\n",
        "                        ","{$}"," -vv ","\n",
        "> Increase debugging:   ","{$}"," -d ","\n",
        "                        ","{$}"," -dd ","\n",
        "> Display reasons:      ","{$}"," -reason ","\n",
        "  (same as ","{$}"," -vv "," )\n",
        "> Only show open ports: ","{$}"," -open ","\n",
        "> Trace all packets:    ","{$}"," -packet-trace ","\n",
        "> Show host routes:     ","{$}"," -iflist ","\n",
        "> Resume scan:          ","{$}"," -resume ","\n",
        "\n",
        "Misc:\n",
        "> Enable IPv6 scan: ","{$}"," -6 ","\n",
        "> Agressive mode:   ","{$}"," -A ","\n",
        "  Enables OS 7 version detection, script scanning\n",
        "  and traceroute.\n"
    ]},
    "netcat":{"score":0, "content":[
        "Syntax:\n",
        "{$}"," nc [Options] <Host> <Port> ","\n",
        "\n",
        "Cheat Sheet:\n",
        "> Listen for inbound: ","{$}"," nc -lvp <port> ","\n",
        "> Port scan for host: ","{$}"," nc -znv <ip_address> <port>-<port> ","\n",
        "\n",
        "Listening:\n",
        "> Set listen mode:  ","{$}"," -l ","\n",
        "> Set local port:   ","{$}"," -p <port> ","\n",
        "> Set local source: ","{$}"," -s <ip_address> ","\n",
        "\n",
        "Scanning:\n",
        "> Scan single port: ","{$}"," -z <port> ","\n",
        "> Scan port range:  ","{$}"," -z <port>-<port> ","\n",
        "> Delay interval:   ","{$}"," -i <seconds> ","\n",
        "\n",
        "Misc:\n",
        "> Allow IPv4 only:         ","{$}"," -4 ","\n",
        "> Allow IPv6 only:         ","{$}"," -6 ","\n",
        "> Enable UDP mode:         ","{$}"," -u ","\n",
        "> IP address only, no DNS: ","{$}"," -n ","\n",
        "> Output traffic to file:  ","{$}"," -o <file_name> ","\n",
        "> Increase verbosity:      ","{$}"," -v ","\n",
        "                           ","{$}"," -vv ","\n"
    ]},
    "hashcat":{"score":0, "content":[
        "hashcat content..."
    ]},
    "John the Ripper":{"score":0, "content":[
        "Syntax:\n",
        "{$}"," john [Options] <Hash/File> ",
        "\n\n",
        "Core Options:\n",
        "> Set wordlist:      ","{$}"," --wordlist=<file> <hash/file> ","\n",
        "> Set format:        ","{$}"," --format=<format> ","\n",
        "> Set rules:         ","{$}"," --rules=<rule_name> ","\n",
        "> Set default rules: ","{$}"," --rules ","\n",
        "> Incremental mode:  ","{$}"," --incremental ","\n",
        "> Loopback attack:   ","{$}"," --loopback <hash/file> ","\n",
        "> Set mask:          ","{$}"," --mask=<mask_rule> ","\n",
        "\n",
        "Rules:\n",
        "> Set rules:         ","{$}"," --rules=<rule_name> ","\n",
        "> Set default rules: ","{$}"," --rules ","\n",
        "\n",
        "> ","{$}"," --rules:Single ","\n",
        "> ","{$}"," --rules:Wordlist ","\n",
        "> ","{$}"," --rules:Extra ","\n",
        "> ","{$}"," --rules:Jumbo ","\n",
        "> ","{$}"," --rules:KoreLogic ","\n",
        "> ","{$}"," --rules:All ","\n",
        "\n",
        "Incremental Mode:\n",
        "> Set incremental mode: ","{$}"," --incremental ","\n",
        "> Set maximum digits:   ","{$}"," --incremental-charcount=<number> ","\n"
    ]},
    "Burp Suite":{"score":0, "content":[
        "Tools:\n",
        "> Proxy:     Intercept and modify requests and responses.\n",
        "> Intruder:  Spray an endpoint with requests. Used for conducting fuzzing and bruteforce attacks.\n",
        "> Reapter:   Capture, modify and resend the same request repeatedly. Used for crafting and running tests and attacks.\n",
        "> Sequencer: Asses the randomness of data such as tokens like session cookie values. Used to identify insecure random value generation.\n",
        "> Decoder:   Decode captured data or encode payloads before attacking a target.\n",
        "> Comparer:  Compare two sets of data at word or byte level. Used for analysiing data.\n"
    ]}
}